{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GruvDoc is pre-configured MkDocs project with all the must useful extensions and tweaks needed, just Fork, Change and Push! Features # GruvDoc is all extra config files, anything can be changed easily. Tweaks Material for MkDocs under the hood! GruvBox color palette with 24 different colors for both primary and accent. JetBrainsMono font. Simple, pre-configured mkdocs.yml file. Github / Gitlab Workflows included for auto Deployment! Including Styles and custom Utils . Usage # Fork GruvDoc github repo and Clone it or Clone the main repo: git clone https://github.com/aasmpro/gruvdoc.git by Forking you don't need to create and set new repo. create a virtual environment and install packages: pip install -r requirements/gruvdoc.txt serve your local version and start editing! mkdocs serve when you are done, commit and push changes. workflows will take care of deployments. check mkdocs-material/publishing for more information. In another repo # if you want to add GruvDoc in another project: copy docs folder to your project copy mkdocs.yml file to your project copy requirements folder to your project copy .github/workflows/gruvdoc.yml or .gitlab-ci.yml for workflows You don't want tweaks?! # you rather using GrubDoc without its tweaked theme? no problem! just comment extra css section in mkdocs.yml file: ## Extra css files ### comment these lines, ### if you want to use default material theme extra_css : - assets/stylesheets/fonts.css - assets/stylesheets/vars.css - assets/stylesheets/scheme.css - assets/stylesheets/primary.css - assets/stylesheets/accent.css - assets/stylesheets/admonitions.css - assets/stylesheets/utils.css - assets/stylesheets/styles.css and then set your palette: ## Theme settings theme : name : material ### comment these lines, ### if you want to use default material theme palette : scheme : gruvbox primary : green accent : green ### uncomment to use default material theme # palette: # scheme: default you can change anything by editing only mkdocs.yml file.","title":"Home"},{"location":"#features","text":"GruvDoc is all extra config files, anything can be changed easily. Tweaks Material for MkDocs under the hood! GruvBox color palette with 24 different colors for both primary and accent. JetBrainsMono font. Simple, pre-configured mkdocs.yml file. Github / Gitlab Workflows included for auto Deployment! Including Styles and custom Utils .","title":"Features"},{"location":"#usage","text":"Fork GruvDoc github repo and Clone it or Clone the main repo: git clone https://github.com/aasmpro/gruvdoc.git by Forking you don't need to create and set new repo. create a virtual environment and install packages: pip install -r requirements/gruvdoc.txt serve your local version and start editing! mkdocs serve when you are done, commit and push changes. workflows will take care of deployments. check mkdocs-material/publishing for more information.","title":"Usage"},{"location":"#in-another-repo","text":"if you want to add GruvDoc in another project: copy docs folder to your project copy mkdocs.yml file to your project copy requirements folder to your project copy .github/workflows/gruvdoc.yml or .gitlab-ci.yml for workflows","title":"In another repo"},{"location":"#you-dont-want-tweaks","text":"you rather using GrubDoc without its tweaked theme? no problem! just comment extra css section in mkdocs.yml file: ## Extra css files ### comment these lines, ### if you want to use default material theme extra_css : - assets/stylesheets/fonts.css - assets/stylesheets/vars.css - assets/stylesheets/scheme.css - assets/stylesheets/primary.css - assets/stylesheets/accent.css - assets/stylesheets/admonitions.css - assets/stylesheets/utils.css - assets/stylesheets/styles.css and then set your palette: ## Theme settings theme : name : material ### comment these lines, ### if you want to use default material theme palette : scheme : gruvbox primary : green accent : green ### uncomment to use default material theme # palette: # scheme: default you can change anything by editing only mkdocs.yml file.","title":"You don't want tweaks?!"},{"location":"demo/abbreviations/","text":"check mkdocs-material/abbreviations for more information. The HTML specification is maintained by the W3C. *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium The HTML specification is maintained by the W3C .","title":"Abbreviations"},{"location":"demo/admonitions/","text":"check mkdocs-material/admonitions for more information. Default # !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Change title # !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Remove title # !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Embedded content # !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ``` python def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Collapsible blocks # ??? note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Adding a + after ??? will render the block as open on page load: ???+ note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa Supported types # note , seelaso Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. abstract , summary , tldr Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. info , todo Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. tip , hint , important Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. success , check , done Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. question , help , faq Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. warning , caution , attention Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. failure , fail , missing Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. danger , error Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. bug Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. example Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. quote , cite Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit.","title":"Admonitions"},{"location":"demo/admonitions/#default","text":"!!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Default"},{"location":"demo/admonitions/#change-title","text":"!!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Change title"},{"location":"demo/admonitions/#remove-title","text":"!!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Remove title"},{"location":"demo/admonitions/#embedded-content","text":"!!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ``` python def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.","title":"Embedded content"},{"location":"demo/admonitions/#collapsible-blocks","text":"??? note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Adding a + after ??? will render the block as open on page load: ???+ note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa","title":"Collapsible blocks"},{"location":"demo/admonitions/#supported-types","text":"note , seelaso Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. abstract , summary , tldr Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. info , todo Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. tip , hint , important Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. success , check , done Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. question , help , faq Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. warning , caution , attention Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. failure , fail , missing Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. danger , error Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. bug Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. example Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. quote , cite Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit.","title":"Supported types"},{"location":"demo/buttons/","text":"check mkdocs-material/buttons for more information. Default # [ Subscribe to our mailing list ]( # ){ .md-button } Subscribe to our mailing list Primary buttons # [ Subscribe to our mailing list ]( # ){ .md-button .md-button--primary } Subscribe to our mailing list With icon # [ Submit :fontawesome-solid-paper-plane: ]( # ){ .md-button .md-button--primary } Submit","title":"Buttons"},{"location":"demo/buttons/#default","text":"[ Subscribe to our mailing list ]( # ){ .md-button } Subscribe to our mailing list","title":"Default"},{"location":"demo/buttons/#primary-buttons","text":"[ Subscribe to our mailing list ]( # ){ .md-button .md-button--primary } Subscribe to our mailing list","title":"Primary buttons"},{"location":"demo/buttons/#with-icon","text":"[ Submit :fontawesome-solid-paper-plane: ]( # ){ .md-button .md-button--primary } Submit","title":"With icon"},{"location":"demo/code-blocks/","text":"check mkdocs-material/code-blocks for more information. Specifying the language # ``` python import tensorflow as tf ``` import tensorflow as tf Showcases # python # from People import Person as PersonClass # a random comment! class MyPersonClass ( PersonClass ): \"\"\" simple class to represent a person \"\"\" name = \"some default name\" age = 20 data = [ 1 , 2.3 , ( 4 ,), { \"key\" : \"value\" }] def __init__ ( self ): super () . __init__ () @property def in_10_years ( self ): return self . age + 10 javascript # import React from \"react\" ; import ReactDOM from \"react-dom\" ; import { BrowserRouter } from \"react-router-dom\" ; // Redux import Store from \"./store\" ; import { Provider } from \"react-redux\" ; // App import App from \"./App\" ; // CSS import \"./assets/css/main.min.css\" ; ReactDOM . render ( < BrowserRouter > < Provider store = { Store } > < App /> < /Provider> < /BrowserRouter>, document . getElementById ( \"root\" ) ); css # [ data-md-color-accent = \"orange\" ] { --md-accent-fg-color : var ( --color-orange0 ); --md-accent-fg-color--transparent : var ( --color-orange0-rgba01 ); --md-accent-bg-color : var ( --color-orange0-rgba09 ); --md-accent-bg-color--light : var ( --color-orange0-rgba05 ); } # id . class { color : red ; } html # < head > < title > Page Title </ title > </ head > < body > < h1 > Hello World! </ h1 > < p id = \"anId\" class = \"text-red\" > we still here... :): </ p > </ body > yaml # ## Theme settings theme : name : material favicon : assets/images/favicon.png features : - navigation.tabs palette : scheme : gruvbox primary : green accent : green icon : logo : assets/images/favicon.svg logo : assets/images/favicon.svg json # { \"name\" : \"random name\" , \"age\" : 123 , \"data\" : [ { \"title\" : \"random title\" } ] } Line numbers # ```python linenums=\"1\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Highlighting specific lines # ```python hl_lines=\"2 3\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Line ranges can also be used for conveniently specifying multiple lines. ```python hl_lines=\"2-5\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Highlighting inline code blocks # The `#!python range()` function is used to generate a sequence of numbers. The range () function is used to generate a sequence of numbers. Adding keyboard keys # ++ctrl+alt+del++ Ctrl + Alt + Del","title":"Code blocks"},{"location":"demo/code-blocks/#specifying-the-language","text":"``` python import tensorflow as tf ``` import tensorflow as tf","title":"Specifying the language"},{"location":"demo/code-blocks/#showcases","text":"","title":"Showcases"},{"location":"demo/code-blocks/#python","text":"from People import Person as PersonClass # a random comment! class MyPersonClass ( PersonClass ): \"\"\" simple class to represent a person \"\"\" name = \"some default name\" age = 20 data = [ 1 , 2.3 , ( 4 ,), { \"key\" : \"value\" }] def __init__ ( self ): super () . __init__ () @property def in_10_years ( self ): return self . age + 10","title":"python"},{"location":"demo/code-blocks/#javascript","text":"import React from \"react\" ; import ReactDOM from \"react-dom\" ; import { BrowserRouter } from \"react-router-dom\" ; // Redux import Store from \"./store\" ; import { Provider } from \"react-redux\" ; // App import App from \"./App\" ; // CSS import \"./assets/css/main.min.css\" ; ReactDOM . render ( < BrowserRouter > < Provider store = { Store } > < App /> < /Provider> < /BrowserRouter>, document . getElementById ( \"root\" ) );","title":"javascript"},{"location":"demo/code-blocks/#css","text":"[ data-md-color-accent = \"orange\" ] { --md-accent-fg-color : var ( --color-orange0 ); --md-accent-fg-color--transparent : var ( --color-orange0-rgba01 ); --md-accent-bg-color : var ( --color-orange0-rgba09 ); --md-accent-bg-color--light : var ( --color-orange0-rgba05 ); } # id . class { color : red ; }","title":"css"},{"location":"demo/code-blocks/#html","text":"< head > < title > Page Title </ title > </ head > < body > < h1 > Hello World! </ h1 > < p id = \"anId\" class = \"text-red\" > we still here... :): </ p > </ body >","title":"html"},{"location":"demo/code-blocks/#yaml","text":"## Theme settings theme : name : material favicon : assets/images/favicon.png features : - navigation.tabs palette : scheme : gruvbox primary : green accent : green icon : logo : assets/images/favicon.svg logo : assets/images/favicon.svg","title":"yaml"},{"location":"demo/code-blocks/#json","text":"{ \"name\" : \"random name\" , \"age\" : 123 , \"data\" : [ { \"title\" : \"random title\" } ] }","title":"json"},{"location":"demo/code-blocks/#line-numbers","text":"```python linenums=\"1\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Line numbers"},{"location":"demo/code-blocks/#highlighting-specific-lines","text":"```python hl_lines=\"2 3\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Line ranges can also be used for conveniently specifying multiple lines. ```python hl_lines=\"2-5\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Highlighting specific lines"},{"location":"demo/code-blocks/#highlighting-inline-code-blocks","text":"The `#!python range()` function is used to generate a sequence of numbers. The range () function is used to generate a sequence of numbers.","title":"Highlighting inline code blocks"},{"location":"demo/code-blocks/#adding-keyboard-keys","text":"++ctrl+alt+del++ Ctrl + Alt + Del","title":"Adding keyboard keys"},{"location":"demo/content-tabs/","text":"check mkdocs-material/content-tabs for more information. Grouping code blocks # === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` C C++ #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Grouping other content # === \"Unordered list\" * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci === \"Ordered list\" 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Unordered list Ordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Embedded content # !!! example === \"Unordered List\" _Example_: ``` markdown * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci ``` _Result_: * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci === \"Ordered List\" _Example_: ``` markdown 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci ``` _Result_: 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Example Unordered List Ordered List Example : * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci Result : Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Example : 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Result : Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"Content tabs"},{"location":"demo/content-tabs/#grouping-code-blocks","text":"=== \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` C C++ #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Grouping code blocks"},{"location":"demo/content-tabs/#grouping-other-content","text":"=== \"Unordered list\" * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci === \"Ordered list\" 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Unordered list Ordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"Grouping other content"},{"location":"demo/content-tabs/#embedded-content","text":"!!! example === \"Unordered List\" _Example_: ``` markdown * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci ``` _Result_: * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci === \"Ordered List\" _Example_: ``` markdown 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci ``` _Result_: 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Example Unordered List Ordered List Example : * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci Result : Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Example : 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Result : Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"Embedded content"},{"location":"demo/data-tables/","text":"check mkdocs-material/data-tables for more information. Using data tables # Method Description GET Fetch resource PUT Update resource DELETE Delete resource Column alignment # Left Center Right | Method | Description | | :------- | :----------------------------------- | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Method Description GET Fetch resource PUT Update resource DELETE Delete resource | Method | Description | | :------: | :----------------------------------: | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Method Description GET Fetch resource PUT Update resource DELETE Delete resource | Method | Description | | -------: | -----------------------------------: | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"Data tables"},{"location":"demo/data-tables/#using-data-tables","text":"Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"Using data tables"},{"location":"demo/data-tables/#column-alignment","text":"Left Center Right | Method | Description | | :------- | :----------------------------------- | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Method Description GET Fetch resource PUT Update resource DELETE Delete resource | Method | Description | | :------: | :----------------------------------: | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Method Description GET Fetch resource PUT Update resource DELETE Delete resource | Method | Description | | -------: | -----------------------------------: | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"Column alignment"},{"location":"demo/diagrams/","text":"check mkdocs-material/diagrams for more information. Usage # Using flowcharts # Flowcharts are diagrams that represent workflows or processes. The steps are rendered as nodes of various kinds and are connected by edges, describing the necessary order of steps: Flow chart ``` mermaid graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; ``` graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; Using sequence diagrams # Sequence diagrams describe a specific scenario as sequential interactions between multiple objects or actors, including the messages that are exchanged between those actors: Sequence diagram ``` mermaid sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! ``` sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! Using state diagrams # State diagrams are a great tool to describe the behavior of a system, decomposing it into a finite number of states, and transitions between those states: State diagram ``` mermaid stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*] ``` stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*] Using class diagrams # Class diagrams are central to object oriented programing, describing the structure of a system by modelling entities as classes and relationships between them: Class diagram ``` mermaid classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } ``` classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } Using entity-relationship diagrams # An entity-relationship diagram is composed of entity types and specifies relationships that exist between entities. It describes inter-related things in a specific domain of knowledge: Entity-relationship diagram ``` mermaid erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ``` erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Other diagram types # Besides the diagram types listed above, [Mermaid.js] provides support for pie charts , gantt charts , user journeys , git graphs and requirement diagrams , all of which are not officially supported by Material for MkDocs. Those diagrams should still work as advertised by [Mermaid.js], but we don't consider them a good choice, mostly as they don't work well on mobile.","title":"Diagrams"},{"location":"demo/diagrams/#usage","text":"","title":"Usage"},{"location":"demo/diagrams/#using-flowcharts","text":"Flowcharts are diagrams that represent workflows or processes. The steps are rendered as nodes of various kinds and are connected by edges, describing the necessary order of steps: Flow chart ``` mermaid graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; ``` graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"Using flowcharts"},{"location":"demo/diagrams/#using-sequence-diagrams","text":"Sequence diagrams describe a specific scenario as sequential interactions between multiple objects or actors, including the messages that are exchanged between those actors: Sequence diagram ``` mermaid sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! ``` sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good!","title":"Using sequence diagrams"},{"location":"demo/diagrams/#using-state-diagrams","text":"State diagrams are a great tool to describe the behavior of a system, decomposing it into a finite number of states, and transitions between those states: State diagram ``` mermaid stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*] ``` stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*]","title":"Using state diagrams"},{"location":"demo/diagrams/#using-class-diagrams","text":"Class diagrams are central to object oriented programing, describing the structure of a system by modelling entities as classes and relationships between them: Class diagram ``` mermaid classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } ``` classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() }","title":"Using class diagrams"},{"location":"demo/diagrams/#using-entity-relationship-diagrams","text":"An entity-relationship diagram is composed of entity types and specifies relationships that exist between entities. It describes inter-related things in a specific domain of knowledge: Entity-relationship diagram ``` mermaid erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ``` erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses","title":"Using entity-relationship diagrams"},{"location":"demo/diagrams/#other-diagram-types","text":"Besides the diagram types listed above, [Mermaid.js] provides support for pie charts , gantt charts , user journeys , git graphs and requirement diagrams , all of which are not officially supported by Material for MkDocs. Those diagrams should still work as advertised by [Mermaid.js], but we don't consider them a good choice, mostly as they don't work well on mobile.","title":"Other diagram types"},{"location":"demo/footnotes/","text":"check mkdocs-material/footnotes for more information. Adding footnote references # Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Single line # [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Multiple lines # [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Footnotes"},{"location":"demo/footnotes/#adding-footnote-references","text":"Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2","title":"Adding footnote references"},{"location":"demo/footnotes/#single-line","text":"[^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.","title":"Single line"},{"location":"demo/footnotes/#multiple-lines","text":"[^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Multiple lines"},{"location":"demo/formatting/","text":"check mkdocs-material/formatting for more information. Highlighting changes # Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. Highlighting text # - ==This was marked== - ^^This was inserted^^ - ~~This was deleted~~ This was marked This was inserted This was deleted Sub- and superscripts # - H~2~0 - A^T^A H 2 0 A T A","title":"Formatting"},{"location":"demo/formatting/#highlighting-changes","text":"Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content.","title":"Highlighting changes"},{"location":"demo/formatting/#highlighting-text","text":"- ==This was marked== - ^^This was inserted^^ - ~~This was deleted~~ This was marked This was inserted This was deleted","title":"Highlighting text"},{"location":"demo/formatting/#sub-and-superscripts","text":"- H~2~0 - A^T^A H 2 0 A T A","title":"Sub- and superscripts"},{"location":"demo/icons-emojis/","text":"check mkdocs-material/icons-emojis for more information. Using emojis # :smile: Using icons # - :material-account-circle: \u2013 `.icons/material/account-circle.svg` - :fontawesome-regular-laugh-wink: \u2013 `.icons/fontawesome/regular/laugh-wink.svg` - :octicons-repo-push-24: \u2013 `.icons/octicons/repo-push-24.svg` \u2013 .icons/material/account-circle.svg :fontawesome-regular-laugh-wink: \u2013 .icons/fontawesome/regular/laugh-wink.svg \u2013 .icons/octicons/repo-push-24.svg with colors # - :fontawesome-brands-medium:{ .color-aqua0 } \u2013 Medium - :fontawesome-brands-twitter:{ .color-blue1 } \u2013 Twitter - :fontawesome-brands-facebook:{ .color-blue0 } \u2013 Facebook \u2013 Medium \u2013 Twitter \u2013 Facebook","title":"Icons & Emojis"},{"location":"demo/icons-emojis/#using-emojis","text":":smile:","title":"Using emojis"},{"location":"demo/icons-emojis/#using-icons","text":"- :material-account-circle: \u2013 `.icons/material/account-circle.svg` - :fontawesome-regular-laugh-wink: \u2013 `.icons/fontawesome/regular/laugh-wink.svg` - :octicons-repo-push-24: \u2013 `.icons/octicons/repo-push-24.svg` \u2013 .icons/material/account-circle.svg :fontawesome-regular-laugh-wink: \u2013 .icons/fontawesome/regular/laugh-wink.svg \u2013 .icons/octicons/repo-push-24.svg","title":"Using icons"},{"location":"demo/icons-emojis/#with-colors","text":"- :fontawesome-brands-medium:{ .color-aqua0 } \u2013 Medium - :fontawesome-brands-twitter:{ .color-blue1 } \u2013 Twitter - :fontawesome-brands-facebook:{ .color-blue0 } \u2013 Facebook \u2013 Medium \u2013 Twitter \u2013 Facebook","title":"with colors"},{"location":"demo/images/","text":"check mkdocs-material/images for more information. Image captions # <figure> <img src=\"https://dummyimage.com/600x400/eee/aaa\" width=\"300\" /> <figcaption>Image caption</figcaption> </figure> Image caption Image lazy-loading # ![Placeholder](https://dummyimage.com/600x400/eee/aaa){ loading=lazy }","title":"Images"},{"location":"demo/images/#image-captions","text":"<figure> <img src=\"https://dummyimage.com/600x400/eee/aaa\" width=\"300\" /> <figcaption>Image caption</figcaption> </figure> Image caption","title":"Image captions"},{"location":"demo/images/#image-lazy-loading","text":"![Placeholder](https://dummyimage.com/600x400/eee/aaa){ loading=lazy }","title":"Image lazy-loading"},{"location":"demo/lists/","text":"check mkdocs-material/lists for more information. Unordered lists # - Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. * Nam vulputate tincidunt fringilla. * Nullam dignissim ultrices urna non auctor. Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Ordered lists # 1. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. 1. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. 2. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. 1. Mauris dictum mi lacus 2. Ut sit amet placerat ante 3. Suspendisse ac eros arcu Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Definition lists # `Lorem ipsum dolor sit amet` : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. `Cras arcu libero` : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Tasklists # - [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [ ] Praesent sed risus massa - [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"Lists"},{"location":"demo/lists/#unordered-lists","text":"- Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. * Nam vulputate tincidunt fringilla. * Nullam dignissim ultrices urna non auctor. Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.","title":"Unordered lists"},{"location":"demo/lists/#ordered-lists","text":"1. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. 1. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. 2. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. 1. Mauris dictum mi lacus 2. Ut sit amet placerat ante 3. Suspendisse ac eros arcu Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu","title":"Ordered lists"},{"location":"demo/lists/#definition-lists","text":"`Lorem ipsum dolor sit amet` : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. `Cras arcu libero` : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.","title":"Definition lists"},{"location":"demo/lists/#tasklists","text":"- [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [ ] Praesent sed risus massa - [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"Tasklists"},{"location":"docs/colors/","text":"GruvDoc supports all GruvBox colors for both primary and accent color. you must set theme to material and palette scheme to gruvbox : theme : name : material palette : scheme : gruvbox primary : green accent : green color names for primary and accent colors: Default *1 *2 gray gray1 gray2 red red1 red2 green green1 green2 yellow yellow1 yellow2 blue blue1 blue2 purple purple1 purple2 aqua aqua1 aqua2 orange orange1 orange2 Black theme there is also a black theme for primary which is configured with blue accent. Note scheme, primary and accent css files exist in /docs/assets/stylesheets/ Palette # color palette variables are in /docs/assets/stylesheets/vars.css . there are 11 variables per color, starting with --color- prefix then color name and for shades --color-[color-name]-rgba[opacity] . an example for red color: : root { /* Red0 */ --color-red0 : #9d0006 ; --color-red0-rgba10 : rgba ( 157 , 0 , 6 , 1 ); --color-red0-rgba09 : rgba ( 157 , 0 , 6 , 0.9 ); --color-red0-rgba08 : rgba ( 157 , 0 , 6 , 0.8 ); --color-red0-rgba07 : rgba ( 157 , 0 , 6 , 0.7 ); --color-red0-rgba06 : rgba ( 157 , 0 , 6 , 0.6 ); --color-red0-rgba05 : rgba ( 157 , 0 , 6 , 0.5 ); --color-red0-rgba04 : rgba ( 157 , 0 , 6 , 0.4 ); --color-red0-rgba03 : rgba ( 157 , 0 , 6 , 0.3 ); --color-red0-rgba02 : rgba ( 157 , 0 , 6 , 0.2 ); --color-red0-rgba01 : rgba ( 157 , 0 , 6 , 0.1 ); } color names black, white dark0, dark1, dark2, dark3, dark4, dark5 light0, light1, light2, light3, light4, light5 gray0, gray1, gray2 red0, red1, red2 green0, green1, green2 yellow0, yellow1, yellow2 blue0, blue1, blue2 purple0, purple1, purple2 aqua0, aqua1, aqua2 orange0, orange1, orange2 Admonitions # admonitions colors are configured in /docs/assets/stylesheets/admonitions.css .","title":"Colors"},{"location":"docs/colors/#palette","text":"color palette variables are in /docs/assets/stylesheets/vars.css . there are 11 variables per color, starting with --color- prefix then color name and for shades --color-[color-name]-rgba[opacity] . an example for red color: : root { /* Red0 */ --color-red0 : #9d0006 ; --color-red0-rgba10 : rgba ( 157 , 0 , 6 , 1 ); --color-red0-rgba09 : rgba ( 157 , 0 , 6 , 0.9 ); --color-red0-rgba08 : rgba ( 157 , 0 , 6 , 0.8 ); --color-red0-rgba07 : rgba ( 157 , 0 , 6 , 0.7 ); --color-red0-rgba06 : rgba ( 157 , 0 , 6 , 0.6 ); --color-red0-rgba05 : rgba ( 157 , 0 , 6 , 0.5 ); --color-red0-rgba04 : rgba ( 157 , 0 , 6 , 0.4 ); --color-red0-rgba03 : rgba ( 157 , 0 , 6 , 0.3 ); --color-red0-rgba02 : rgba ( 157 , 0 , 6 , 0.2 ); --color-red0-rgba01 : rgba ( 157 , 0 , 6 , 0.1 ); } color names black, white dark0, dark1, dark2, dark3, dark4, dark5 light0, light1, light2, light3, light4, light5 gray0, gray1, gray2 red0, red1, red2 green0, green1, green2 yellow0, yellow1, yellow2 blue0, blue1, blue2 purple0, purple1, purple2 aqua0, aqua1, aqua2 orange0, orange1, orange2","title":"Palette"},{"location":"docs/colors/#admonitions","text":"admonitions colors are configured in /docs/assets/stylesheets/admonitions.css .","title":"Admonitions"},{"location":"docs/fixes/","text":"style fixes are in utils.css file. Task list color # setting task list checked item color to theme --md-primary-fg-color . Selection color # this part sets user selection foreground color to --md-default-fg-color and background to --md-typeset-mark-color from current theme. Search placeholder color # by default search place holder color wont change with changing theme for scheme, here placeholder color sets to theme --md-default-fg-color . Table header # table headers like placeholders wont change with theme colors, so GruvDoc set foreground color to --md-default-fg-color and background to --md-primary-fg-color from current theme. Top # sets a border color equal to --md-primary-fg-color . Remove footer # if you want to remove footer entirely, uncomment styles for .md-footer .","title":"Fixes"},{"location":"docs/fixes/#task-list-color","text":"setting task list checked item color to theme --md-primary-fg-color .","title":"Task list color"},{"location":"docs/fixes/#selection-color","text":"this part sets user selection foreground color to --md-default-fg-color and background to --md-typeset-mark-color from current theme.","title":"Selection color"},{"location":"docs/fixes/#search-placeholder-color","text":"by default search place holder color wont change with changing theme for scheme, here placeholder color sets to theme --md-default-fg-color .","title":"Search placeholder color"},{"location":"docs/fixes/#table-header","text":"table headers like placeholders wont change with theme colors, so GruvDoc set foreground color to --md-default-fg-color and background to --md-primary-fg-color from current theme.","title":"Table header"},{"location":"docs/fixes/#top","text":"sets a border color equal to --md-primary-fg-color .","title":"Top"},{"location":"docs/fixes/#remove-footer","text":"if you want to remove footer entirely, uncomment styles for .md-footer .","title":"Remove footer"},{"location":"docs/fonts/","text":"GruvDoc use JetBrainsMono as default font, which includes 8 font weights from 100 to 800 configured for both normal and italic styles. font files exists in /docs/assets/fonts/JBM/ and font-faces are in /docs/assets/stylesheets/fonts.css . you can disable JetBrainsMono font with commenting fonts.css in extra css: extra_css : - assets/stylesheets/fonts.css","title":"Fonts"},{"location":"docs/styles/","text":"there is also a style.css file containing pre-defined css classes for color and background-color . these classes can be used in markdown files using Attribute List extension. for foreground colors, class names are color-[color-name] and bg-color-[color-name] for backgrounds: . color-red0 { color : var ( --color-red0 ); } . bg-color-red0 { background-color : var ( --color-red0 ); }","title":"Styles"},{"location":"docs/utils/","text":"Made with # an extra made_with key can change Made with ... content in footer. - set true to show default - set false or comment to remove - or set your custom text! extra : made_with : true # or false # or made_with : Made with Love! Version # an extra version key can version content in footer. extra : version : name : v1.0.4 link : https://github.com/aasmpro/gruvdoc/releases/tag/v1.0.4 License # an extra license key can version content in footer. extra : license : name : MIT link : https://github.com/aasmpro/gruvdoc/blob/master/LICENSE Sortable tables # tablesort.js file in extra javascript files contains the code which make table headers clickable for sorting.","title":"Utils"},{"location":"docs/utils/#made-with","text":"an extra made_with key can change Made with ... content in footer. - set true to show default - set false or comment to remove - or set your custom text! extra : made_with : true # or false # or made_with : Made with Love!","title":"Made with"},{"location":"docs/utils/#version","text":"an extra version key can version content in footer. extra : version : name : v1.0.4 link : https://github.com/aasmpro/gruvdoc/releases/tag/v1.0.4","title":"Version"},{"location":"docs/utils/#license","text":"an extra license key can version content in footer. extra : license : name : MIT link : https://github.com/aasmpro/gruvdoc/blob/master/LICENSE","title":"License"},{"location":"docs/utils/#sortable-tables","text":"tablesort.js file in extra javascript files contains the code which make table headers clickable for sorting.","title":"Sortable tables"}]}